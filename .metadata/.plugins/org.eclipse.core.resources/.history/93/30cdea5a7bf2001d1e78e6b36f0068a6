package com.giovannagrangeiro.projetocp.services;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.giovannagrangeiro.projetocp.domain.Contato;
import com.giovannagrangeiro.projetocp.domain.Pessoa;
import com.giovannagrangeiro.projetocp.repositories.PessoaRepository;

import jakarta.persistence.EntityNotFoundException;

@Service
public class PessoaService {
	
	@Autowired
	private PessoaRepository pessoaRepo;
	
	public Pessoa find(Integer id) {
		Optional<Pessoa> obj = pessoaRepo.findById(id);
		return obj.orElse(null);
		
	}
	
	public Pessoa salvarPessoa(Pessoa pessoa) {
		return pessoaRepo.save(pessoa);
	}
	
	public Pessoa editarPessoa(Integer id, Pessoa editarPessoa) {
		Pessoa existePessoa = pessoaRepo.findById(id)
		.orElseThrow(() -> new EntityNotFoundException("Pessoa nÃ£o encontra com o id: " + id));
		
		existePessoa.setNome(editarPessoa.getNome());
		existePessoa.setCpf(editarPessoa.getCpf());
		existePessoa.setDataDeNascimento(editarPessoa.getDataDeNascimento());
		
	editarPessoa.getContatos().forEach(contato -> {
		
		Contato contatoEdit = existePessoa.getContatos().stream().filter(c -> c.getId().equals( contato.getId()))
		.findFirst().orElse(new Contato());
		
		contatoEdit.setNome(contato.getNome());
		
	});
	existePessoa.getContatos().removeIf(c -> editarPessoa.getContatos().contains(c));
		
		
		existePessoa.setContatos(editarPessoa.getContatos());
		
		return pessoaRepo.save(existePessoa);
	}
	

	

}
