package com.giovannagrangeiro.projetocp;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

import java.time.LocalDate;

import org.junit.jupiter.api.Test;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.test.context.SpringBootTest;

import com.giovannagrangeiro.projetocp.domain.Pessoa;
import com.giovannagrangeiro.projetocp.repositories.PessoaRepository;
import com.giovannagrangeiro.projetocp.resource.PessoaResource;
import com.giovannagrangeiro.projetocp.services.PessoaService;

@SpringBootTest
public class PessoaTeste {
	
	private PessoaRepository pessoarepo;
	
	private PessoaService pessoaService;
	
	private PessoaResource pessoaResource;
	

	@Test
	public void testeCriarPessoa() {
		MockitoAnnotations.openMocks(this);
		essoaResouce = new PessoaResource(pessoaService);
		
	}
	
	@Test
	public void testeCriarPessoaSemId() {
		Pessoa pessoa = new Pessoa();
		pessoa.setNome("João");
		pessoa.setCpf("10584310994");
		pessoa.setDataDeNascimento(LocalDate.of(2001, 11, 2));
		
		assertEquals("João", pessoa.getNome());
		assertEquals("10584310994", pessoa.getCpf());
		assertEquals(LocalDate.of(2001, 11, 2), pessoa.getDataDeNascimento());
		
	}
	
	@Test
	public void testeCriarPessoaSemCpf() {
		assertThrows(IllegalArgumentException.class, () -> {
			new Pessoa(null,"João", null, LocalDate.of(2001, 11, 2));
		});
	}
	
	@Test
	public void testeCriarPessoaSemNome() {
		assertThrows(IllegalArgumentException.class, () -> {
			new Pessoa(null, null, "10584310994", LocalDate.of(2001, 11, 2));
		});
	}
	
	public void testeCriar

}
